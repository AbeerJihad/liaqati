// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using liaqati_master.Data;

#nullable disable

namespace liaqati_master.Migrations
{
    [DbContext(typeof(LiaqatiDBContext))]
    partial class LiaqatiDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("liaqati_master.Models.Achievement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblAchievements");
                });

            modelBuilder.Entity("liaqati_master.Models.Article", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikesNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewsNumber")
                        .HasColumnType("int");

                    b.Property<int>("avgReading")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblArticles");
                });

            modelBuilder.Entity("liaqati_master.Models.CartItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId");

                    b.ToTable("TblCartItem");
                });

            modelBuilder.Entity("liaqati_master.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblCategory");
                });

            modelBuilder.Entity("liaqati_master.Models.Chat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblChat");
                });

            modelBuilder.Entity("liaqati_master.Models.ChatUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("TblChatUser");
                });

            modelBuilder.Entity("liaqati_master.Models.Comment_Servies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RatePercentage")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("ServicesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("commentFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("repliedFor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ServicesId");

                    b.ToTable("TblCommentServies");
                });

            modelBuilder.Entity("liaqati_master.Models.Comments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("articlesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("commentFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("repliedFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("articlesId");

                    b.ToTable("TblComment");
                });

            modelBuilder.Entity("liaqati_master.Models.Consultation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ViewsNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("TblConsultation");
                });

            modelBuilder.Entity("liaqati_master.Models.ContactUs", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneIntro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblContactUs");
                });

            modelBuilder.Entity("liaqati_master.Models.Coupon", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TblCoupon");
                });

            modelBuilder.Entity("liaqati_master.Models.Coupon_redemption", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CouponId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_DetailsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("RedemptionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total_discount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("Order_DetailsId");

                    b.ToTable("TblCoupon_redemption");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercies_program", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SportsProgramId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("SportsProgramId");

                    b.ToTable("TblExercies_program");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercise", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BodyFocus")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BurnEstimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .HasColumnType("NTEXT");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Equipments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("RatePercentage")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TraningType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("exerciseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TblExercises");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HealthyRecipeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServicesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("HealthyRecipeId");

                    b.HasIndex("ServicesId");

                    b.HasIndex("UserId");

                    b.ToTable("TblFavorite");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite_Servies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FavoriteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServicesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteId");

                    b.HasIndex("ServicesId");

                    b.ToTable("TblFavorite_Servies");
                });

            modelBuilder.Entity("liaqati_master.Models.Files", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HealthyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HealthyId");

                    b.HasIndex("ServiceId");

                    b.ToTable("TblFiles");
                });

            modelBuilder.Entity("liaqati_master.Models.HealthyRecipe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("NTEXT");

                    b.Property<string>("DietaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .HasColumnType("NTEXT");

                    b.Property<bool?>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("MealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<string>("PreparationMethod")
                        .HasColumnType("NTEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<double?>("RatePercentage")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total_Carbohydrate")
                        .HasColumnType("int");

                    b.Property<int>("ViewsNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblHealthyRecipe");
                });

            modelBuilder.Entity("liaqati_master.Models.Ingredent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TblIngredent");
                });

            modelBuilder.Entity("liaqati_master.Models.Meal_Healthy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("HealthyRecdpeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MealPlansId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HealthyRecdpeId");

                    b.HasIndex("MealPlansId");

                    b.ToTable("TblMeal_Healthy");
                });

            modelBuilder.Entity("liaqati_master.Models.MealPlans", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("AvgRecipeTime")
                        .HasColumnType("float");

                    b.Property<string>("BurnEstimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DietaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<string>("MealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Numsubscribers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblMealPlans");
                });

            modelBuilder.Entity("liaqati_master.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("liaqati_master.Models.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblNotification");
                });

            modelBuilder.Entity("liaqati_master.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DiscountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblOrder");
                });

            modelBuilder.Entity("liaqati_master.Models.Order_Details", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("RateId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("TblOrder_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblProducts");
                });

            modelBuilder.Entity("liaqati_master.Models.Rate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExerciseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HealthyRecipeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Order_DetailsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Review")
                        .HasColumnType("int");

                    b.Property<DateTime>("review_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("HealthyRecipeId");

                    b.HasIndex("Order_DetailsId")
                        .IsUnique()
                        .HasFilter("[Order_DetailsId] IS NOT NULL");

                    b.ToTable("TblRate");
                });

            modelBuilder.Entity("liaqati_master.Models.Replyconsultation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reply")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("consId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("consId");

                    b.ToTable("TblReplyconsultation");
                });

            modelBuilder.Entity("liaqati_master.Models.Service", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NTEXT");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("RatePercentage")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("TblServices");
                });

            modelBuilder.Entity("liaqati_master.Models.SportsProgram", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BodyFocus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BurnEstimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Difficulty")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblSportsProgram");
                });

            modelBuilder.Entity("liaqati_master.Models.Tracking", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exercies_programId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Iscomplete")
                        .HasColumnType("bit");

                    b.Property<string>("Order_DetailsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Exercies_programId");

                    b.HasIndex("Order_DetailsId");

                    b.ToTable("TblTracking");
                });

            modelBuilder.Entity("liaqati_master.Models.Tracking_MealPlan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Iscomplete")
                        .HasColumnType("bit");

                    b.Property<string>("Meal_HealthyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Order_DetailsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Meal_HealthyId");

                    b.HasIndex("Order_DetailsId");

                    b.ToTable("Tracking_MealPlan");
                });

            modelBuilder.Entity("liaqati_master.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cover_photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Exp_Years")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Wieght")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Active = false,
                            ConcurrencyStamp = "a4012462-ec33-4829-aa0f-f1d758dee5a7",
                            Cover_photo = "sssssssssssssssa",
                            EmailConfirmed = false,
                            Exp_Years = 10,
                            Fname = "sssssssssssssss",
                            Gender = 1,
                            Height = 120,
                            Lname = "sssssssssssssss",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "ssssssssssssssss",
                            SecurityStamp = "0f2f3ae3-e327-4510-8942-3cce3742cfb5",
                            TwoFactorEnabled = false,
                            Wieght = 120
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("liaqati_master.Models.Achievement", b =>
                {
                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Article", b =>
                {
                    b.HasOne("liaqati_master.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("liaqati_master.Models.CartItem", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Service")
                        .WithMany("CartItems")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Cart")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.ChatUser", b =>
                {
                    b.HasOne("liaqati_master.Models.Chat", "Chat")
                        .WithMany("ChatUser")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("ChatUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Comment_Servies", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithMany("CommentServies")
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Comments", b =>
                {
                    b.HasOne("liaqati_master.Models.Article", "articles")
                        .WithMany("comments")
                        .HasForeignKey("articlesId");

                    b.Navigation("articles");
                });

            modelBuilder.Entity("liaqati_master.Models.Consultation", b =>
                {
                    b.HasOne("liaqati_master.Models.Category", "Category")
                        .WithMany("Consultation")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Consultation")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Coupon_redemption", b =>
                {
                    b.HasOne("liaqati_master.Models.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.Order_Details", "Order_Details")
                        .WithMany()
                        .HasForeignKey("Order_DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercies_program", b =>
                {
                    b.HasOne("liaqati_master.Models.Exercise", "Exercise")
                        .WithMany("Exercies_Programs")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.SportsProgram", "SportsProgram")
                        .WithMany("Exercies_Programs")
                        .HasForeignKey("SportsProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("SportsProgram");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite", b =>
                {
                    b.HasOne("liaqati_master.Models.Article", "Article")
                        .WithMany("Favorite")
                        .HasForeignKey("ArticleId");

                    b.HasOne("liaqati_master.Models.Exercise", "Exercise")
                        .WithMany("Favorite")
                        .HasForeignKey("ExerciseId");

                    b.HasOne("liaqati_master.Models.HealthyRecipe", "HealthyRecipe")
                        .WithMany("Favorite")
                        .HasForeignKey("HealthyRecipeId");

                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithMany("Favorite")
                        .HasForeignKey("ServicesId");

                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Favorite")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Exercise");

                    b.Navigation("HealthyRecipe");

                    b.Navigation("Services");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite_Servies", b =>
                {
                    b.HasOne("liaqati_master.Models.Favorite", "Favorite")
                        .WithMany()
                        .HasForeignKey("FavoriteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favorite");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Files", b =>
                {
                    b.HasOne("liaqati_master.Models.HealthyRecipe", "HealthyRecipe")
                        .WithMany("Files")
                        .HasForeignKey("HealthyId");

                    b.HasOne("liaqati_master.Models.Service", "Service")
                        .WithMany("Files")
                        .HasForeignKey("ServiceId");

                    b.Navigation("HealthyRecipe");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("liaqati_master.Models.HealthyRecipe", b =>
                {
                    b.HasOne("liaqati_master.Models.Category", null)
                        .WithMany("HealthyRecipes")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("liaqati_master.Models.Meal_Healthy", b =>
                {
                    b.HasOne("liaqati_master.Models.HealthyRecipe", "HealthyRecipe")
                        .WithMany("Meal_Healthy")
                        .HasForeignKey("HealthyRecdpeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.MealPlans", "MealPlan")
                        .WithMany("Meal_Healthy")
                        .HasForeignKey("MealPlansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthyRecipe");

                    b.Navigation("MealPlan");
                });

            modelBuilder.Entity("liaqati_master.Models.MealPlans", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("MealPlans")
                        .HasForeignKey("liaqati_master.Models.MealPlans", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Message", b =>
                {
                    b.HasOne("liaqati_master.Models.Chat", "Chat")
                        .WithMany("Message")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("liaqati_master.Models.Notification", b =>
                {
                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Order", b =>
                {
                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Order_Details", b =>
                {
                    b.HasOne("liaqati_master.Models.Order", "Order")
                        .WithMany("Order_Details")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.Service", "Service")
                        .WithMany("Order_Details")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("liaqati_master.Models.Product", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("Products")
                        .HasForeignKey("liaqati_master.Models.Product", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Rate", b =>
                {
                    b.HasOne("liaqati_master.Models.Exercise", "Exercise")
                        .WithMany("Rate")
                        .HasForeignKey("ExerciseId");

                    b.HasOne("liaqati_master.Models.HealthyRecipe", "HealthyRecipe")
                        .WithMany("Rate")
                        .HasForeignKey("HealthyRecipeId");

                    b.HasOne("liaqati_master.Models.Order_Details", "Order_Details")
                        .WithOne("Rate")
                        .HasForeignKey("liaqati_master.Models.Rate", "Order_DetailsId");

                    b.Navigation("Exercise");

                    b.Navigation("HealthyRecipe");

                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Replyconsultation", b =>
                {
                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Replyconsultation")
                        .HasForeignKey("UserId");

                    b.HasOne("liaqati_master.Models.Consultation", "Consultations")
                        .WithMany("Replyconsultations")
                        .HasForeignKey("consId");

                    b.Navigation("Consultations");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Service", b =>
                {
                    b.HasOne("liaqati_master.Models.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId");

                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.SportsProgram", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("SportsProgram")
                        .HasForeignKey("liaqati_master.Models.SportsProgram", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Tracking", b =>
                {
                    b.HasOne("liaqati_master.Models.Exercies_program", "Exercies_program")
                        .WithMany()
                        .HasForeignKey("Exercies_programId");

                    b.HasOne("liaqati_master.Models.Order_Details", "Order_Details")
                        .WithMany("Tracking")
                        .HasForeignKey("Order_DetailsId");

                    b.Navigation("Exercies_program");

                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Tracking_MealPlan", b =>
                {
                    b.HasOne("liaqati_master.Models.Meal_Healthy", "Meal_Healthy")
                        .WithMany()
                        .HasForeignKey("Meal_HealthyId");

                    b.HasOne("liaqati_master.Models.Order_Details", "Order_Details")
                        .WithMany("Tracking_MealPlan")
                        .HasForeignKey("Order_DetailsId");

                    b.Navigation("Meal_Healthy");

                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("liaqati_master.Models.Article", b =>
                {
                    b.Navigation("Favorite");

                    b.Navigation("comments");
                });

            modelBuilder.Entity("liaqati_master.Models.Category", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Consultation");

                    b.Navigation("HealthyRecipes");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Chat", b =>
                {
                    b.Navigation("ChatUser");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("liaqati_master.Models.Consultation", b =>
                {
                    b.Navigation("Replyconsultations");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercise", b =>
                {
                    b.Navigation("Exercies_Programs");

                    b.Navigation("Favorite");

                    b.Navigation("Rate");
                });

            modelBuilder.Entity("liaqati_master.Models.HealthyRecipe", b =>
                {
                    b.Navigation("Favorite");

                    b.Navigation("Files");

                    b.Navigation("Meal_Healthy");

                    b.Navigation("Rate");
                });

            modelBuilder.Entity("liaqati_master.Models.MealPlans", b =>
                {
                    b.Navigation("Meal_Healthy");
                });

            modelBuilder.Entity("liaqati_master.Models.Order", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Order_Details", b =>
                {
                    b.Navigation("Rate");

                    b.Navigation("Tracking");

                    b.Navigation("Tracking_MealPlan");
                });

            modelBuilder.Entity("liaqati_master.Models.Service", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("CommentServies");

                    b.Navigation("Favorite");

                    b.Navigation("Files");

                    b.Navigation("MealPlans");

                    b.Navigation("Order_Details");

                    b.Navigation("Products");

                    b.Navigation("SportsProgram");
                });

            modelBuilder.Entity("liaqati_master.Models.SportsProgram", b =>
                {
                    b.Navigation("Exercies_Programs");
                });

            modelBuilder.Entity("liaqati_master.Models.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("Cart");

                    b.Navigation("ChatUser");

                    b.Navigation("Consultation");

                    b.Navigation("Favorite");

                    b.Navigation("Orders");

                    b.Navigation("Replyconsultation");
                });
#pragma warning restore 612, 618
        }
    }
}
