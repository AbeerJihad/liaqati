// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using liaqati_master.Data;

#nullable disable

namespace liaqati_master.Migrations
{
    [DbContext(typeof(LiaqatiDBContext))]
    [Migration("20230329015658_v")]
    partial class v
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("liaqati_master.Models.Achievements", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblAchievements");
                });

            modelBuilder.Entity("liaqati_master.Models.Article", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikesNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewsNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblArticles");
                });

            modelBuilder.Entity("liaqati_master.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Target")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "النظام الغذائي"
                        },
                        new
                        {
                            Id = "2",
                            Name = "الوجبات"
                        },
                        new
                        {
                            Id = "3",
                            Name = "المكملات الغذائية"
                        },
                        new
                        {
                            Id = "4",
                            Name = "الاجهزة الرياضية"
                        },
                        new
                        {
                            Id = "5",
                            Name = " النظام الرياضي"
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Chat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ReceiverID")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("liaqati_master.Models.ChatUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatUser");
                });

            modelBuilder.Entity("liaqati_master.Models.Comment_Servies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServicesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("commentFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("repliedFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ServicesId");

                    b.ToTable("Comment_Servies");
                });

            modelBuilder.Entity("liaqati_master.Models.Comments", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("articlesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("commentFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("repliedFor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("articlesId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercies_program", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("ExerciseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SportsProgramId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("SportsProgramId");

                    b.ToTable("TblExercies_program");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Day = 1,
                            ExerciseId = "1",
                            SportsProgramId = "100",
                            Week = 1
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Exercise", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BodyFocus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BurnEstimate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int?>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Equipments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TraningType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblExercises");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            BodyFocus = "",
                            Detail = "",
                            Difficulty = 1,
                            Duration = 1,
                            Price = 100.0,
                            Title = ""
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite_Servies", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FavoriteId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ServicesId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ServicesId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteId");

                    b.HasIndex("ServicesId1");

                    b.ToTable("Favorite_Servies");
                });

            modelBuilder.Entity("liaqati_master.Models.HealthyRecipe", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("DieteryType")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<int>("PrepTime")
                        .HasColumnType("int");

                    b.Property<string>("PreparationMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<int>("Total_Carbohydrate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HealthyRecipe");
                });

            modelBuilder.Entity("liaqati_master.Models.MealPlans", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("AvgRecipeTime")
                        .HasColumnType("float");

                    b.Property<string>("DietaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Length")
                        .HasColumnType("int");

                    b.Property<string>("MealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Numsubscribers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TblMealPlans");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AvgRecipeTime = 0.0,
                            DietaryType = "",
                            Image = "",
                            Length = 0,
                            MealType = "",
                            Numsubscribers = 0
                        },
                        new
                        {
                            Id = "2",
                            AvgRecipeTime = 0.0,
                            DietaryType = "",
                            Image = "",
                            Length = 0,
                            MealType = "",
                            Numsubscribers = 0
                        },
                        new
                        {
                            Id = "3",
                            AvgRecipeTime = 0.0,
                            DietaryType = "",
                            Image = "",
                            Length = 0,
                            MealType = "",
                            Numsubscribers = 0
                        },
                        new
                        {
                            Id = "4",
                            AvgRecipeTime = 0.0,
                            DietaryType = "",
                            Image = "",
                            Length = 0,
                            MealType = "",
                            Numsubscribers = 0
                        },
                        new
                        {
                            Id = "5",
                            AvgRecipeTime = 0.0,
                            DietaryType = "",
                            Image = "",
                            Length = 0,
                            MealType = "",
                            Numsubscribers = 0
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("liaqati_master.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("OrderDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserIdDelivery")
                        .HasColumnType("int");

                    b.Property<int>("UserIdResiver")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TblOrder");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            OrderDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 200.0,
                            UserId = "1",
                            UserIdDelivery = 1,
                            UserIdResiver = 1
                        },
                        new
                        {
                            Id = "2",
                            OrderDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 0.0,
                            UserId = "1",
                            UserIdDelivery = 1,
                            UserIdResiver = 1
                        },
                        new
                        {
                            Id = "3",
                            OrderDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TotalPrice = 0.0,
                            UserId = "1",
                            UserIdDelivery = 1,
                            UserIdResiver = 1
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Order_Details", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("RateId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ServiceId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ServiceId");

                    b.ToTable("TblOrder_Details");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "21"
                        },
                        new
                        {
                            Id = "2",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "21"
                        },
                        new
                        {
                            Id = "3",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "21"
                        },
                        new
                        {
                            Id = "4",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 7,
                            RateId = 1,
                            ServiceId = "31"
                        },
                        new
                        {
                            Id = "5",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 5,
                            RateId = 1,
                            ServiceId = "31"
                        },
                        new
                        {
                            Id = "6",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 3,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "7",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "23"
                        },
                        new
                        {
                            Id = "8",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 4,
                            RateId = 1,
                            ServiceId = "23"
                        },
                        new
                        {
                            Id = "9",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 10,
                            RateId = 1,
                            ServiceId = "23"
                        },
                        new
                        {
                            Id = "10",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "23"
                        },
                        new
                        {
                            Id = "11",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "23"
                        },
                        new
                        {
                            Id = "12",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "23"
                        },
                        new
                        {
                            Id = "13",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 7,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "14",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 5,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "15",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 3,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "16",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "17",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 4,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "18",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 10,
                            RateId = 1,
                            ServiceId = "24"
                        },
                        new
                        {
                            Id = "19",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "31"
                        },
                        new
                        {
                            Id = "20",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "31"
                        },
                        new
                        {
                            Id = "21",
                            OrderId = "1",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "31"
                        },
                        new
                        {
                            Id = "22",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 7,
                            RateId = 1,
                            ServiceId = "31"
                        },
                        new
                        {
                            Id = "23",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 5,
                            RateId = 1,
                            ServiceId = "32"
                        },
                        new
                        {
                            Id = "24",
                            OrderId = "2",
                            Price = 100.0,
                            Quantity = 3,
                            RateId = 1,
                            ServiceId = "32"
                        },
                        new
                        {
                            Id = "25",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 2,
                            RateId = 1,
                            ServiceId = "32"
                        },
                        new
                        {
                            Id = "26",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 4,
                            RateId = 1,
                            ServiceId = "32"
                        },
                        new
                        {
                            Id = "27",
                            OrderId = "3",
                            Price = 100.0,
                            Quantity = 10,
                            RateId = 1,
                            ServiceId = "32"
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("imgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TblProducts");

                    b.HasData(
                        new
                        {
                            Id = "21",
                            Discount = 20.0,
                            imgUrl = "/Images/Product/Dumbbell3.jfif"
                        },
                        new
                        {
                            Id = "22",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/LiveupOlympic.jpg"
                        },
                        new
                        {
                            Id = "23",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Curved.jpg"
                        },
                        new
                        {
                            Id = "24",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Spinner.jpg"
                        },
                        new
                        {
                            Id = "25",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Liveup.jpg"
                        },
                        new
                        {
                            Id = "26",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/LiveupOlympic.jpg"
                        },
                        new
                        {
                            Id = "27",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Bowflex.jpg"
                        },
                        new
                        {
                            Id = "28",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Brobantle.jfif"
                        },
                        new
                        {
                            Id = "29",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Adjustable.jpg"
                        },
                        new
                        {
                            Id = "30",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/rower.jpg"
                        },
                        new
                        {
                            Id = "31",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/omega.jpg"
                        },
                        new
                        {
                            Id = "32",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Muscletech.jpg"
                        },
                        new
                        {
                            Id = "33",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Ultima.jpg"
                        },
                        new
                        {
                            Id = "34",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/krilloil.jpg"
                        },
                        new
                        {
                            Id = "35",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/anavite.jpg"
                        },
                        new
                        {
                            Id = "36",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Trace.jpg"
                        },
                        new
                        {
                            Id = "37",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/BodyBio.jpg"
                        },
                        new
                        {
                            Id = "38",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/Vega.jpg"
                        },
                        new
                        {
                            Id = "39",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/HydrationMultiplier.jpg"
                        },
                        new
                        {
                            Id = "40",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/NutriBiotic.jpg"
                        },
                        new
                        {
                            Id = "41",
                            Discount = 0.0,
                            imgUrl = "/Images/Product/krilloil.jpg"
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Rate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Order_DetailsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("review")
                        .HasColumnType("int");

                    b.Property<DateTime>("review_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Order_DetailsId")
                        .IsUnique()
                        .HasFilter("[Order_DetailsId] IS NOT NULL");

                    b.ToTable("TblRate");
                });

            modelBuilder.Entity("liaqati_master.Models.Service", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("TblServices");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            CategoryId = "1",
                            Description = "يعتمد على تناول البقوليات و المكسرات و الأوراق الخضراء ,مفيد لمرضى السكر و القلب ",
                            Price = 19.989999999999998,
                            Title = "حمية البحر المتوسط"
                        },
                        new
                        {
                            Id = "2",
                            CategoryId = "1",
                            Description = " يعتمد على تقليل الكربوهيدرات  و منع السكر المصنع و البطاطا , يتم تناول الفواكه و الخضروات و الحبوب",
                            Price = 20.989999999999998,
                            Title = "  النظام الغذائي باليو"
                        },
                        new
                        {
                            Id = "3",
                            CategoryId = "1",
                            Description = "  يعتمد على تقليل الكربوهيدرات و تناول الدهون الصحية , لا ينصح به النساءو الحوامل و كبار السن",
                            Price = 19.989999999999998,
                            Title = "   كيتو دايت "
                        },
                        new
                        {
                            Id = "4",
                            CategoryId = "1",
                            Description = "  يعتمد على تقليل الكربوهيدرات و تناول الدهون الصحية , لا ينصح به النساءو الحوامل و كبار السن",
                            Price = 19.989999999999998,
                            Title = "   كيتو دايت "
                        },
                        new
                        {
                            Id = "5",
                            CategoryId = "1",
                            Description = "يعتمد على تناول البقوليات و المكسرات و الأوراق الخضراء ,مفيد لمرضى السكر و القلب ",
                            Price = 19.989999999999998,
                            Title = " اختبار "
                        },
                        new
                        {
                            Id = "11",
                            CategoryId = "1",
                            Description = "يعتمد على تناول البقوليات و المكسرات و الأوراق الخضراء ,مفيد لمرضى السكر و القلب ",
                            Price = 19.989999999999998,
                            Title = " اختبار "
                        },
                        new
                        {
                            Id = "21",
                            CategoryId = "4",
                            Description = "",
                            Price = 20.0,
                            Title = "طقم اوزان دمبل 30 كغم"
                        },
                        new
                        {
                            Id = "22",
                            CategoryId = "4",
                            Description = "",
                            Price = 30.0,
                            Title = "حلقات لايف اب الاولمبية للجمباز"
                        },
                        new
                        {
                            Id = "23",
                            CategoryId = "4",
                            Description = "",
                            Price = 1490.0,
                            Title = "مشاية كهربائية منحنية بدون محرك"
                        },
                        new
                        {
                            Id = "24",
                            CategoryId = "4",
                            Description = "",
                            Price = 320.0,
                            Title = "دراجة سبينر"
                        },
                        new
                        {
                            Id = "25",
                            CategoryId = "4",
                            Description = "",
                            Price = 150.0,
                            Title = "Livepro أيروبيك ستيبر ومقعد"
                        },
                        new
                        {
                            Id = "26",
                            CategoryId = "4",
                            Description = "",
                            Price = 15.0,
                            Title = "سجادة Liveup للتمارين الرياضية"
                        },
                        new
                        {
                            Id = "27",
                            CategoryId = "4",
                            Description = "",
                            Price = 175.0,
                            Title = "مقعد بووفليكس متعدد الوظائف"
                        },
                        new
                        {
                            Id = "28",
                            CategoryId = "4",
                            Description = "",
                            Price = 69.0,
                            Title = "حبل معركة بروبانتل"
                        },
                        new
                        {
                            Id = "29",
                            CategoryId = "4",
                            Description = "",
                            Price = 125.0,
                            Title = "مقعد قابل للطي قابل للتعديل للتمارين الرياضية"
                        },
                        new
                        {
                            Id = "30",
                            CategoryId = "4",
                            Description = "",
                            Price = 25.0,
                            Title = "مجدّف"
                        },
                        new
                        {
                            Id = "31",
                            CategoryId = "3",
                            Description = "",
                            Price = 111.0,
                            Title = "زيت السمك أوميغا 3"
                        },
                        new
                        {
                            Id = "32",
                            CategoryId = "3",
                            Description = "",
                            Price = 78.0,
                            Title = "Muscletech, بلاتينيوم ملتي فيتامين"
                        },
                        new
                        {
                            Id = "33",
                            CategoryId = "3",
                            Description = "",
                            Price = 169.0,
                            Title = "Ultima Replenisher"
                        },
                        new
                        {
                            Id = "34",
                            CategoryId = "3",
                            Description = "",
                            Price = 169.0,
                            Title = "زيت الكريل"
                        },
                        new
                        {
                            Id = "35",
                            CategoryId = "3",
                            Description = "",
                            Price = 170.0,
                            Title = "أنافيت"
                        },
                        new
                        {
                            Id = "36",
                            CategoryId = "3",
                            Description = "",
                            Price = 79.0,
                            Title = "Trace Minerals Research"
                        },
                        new
                        {
                            Id = "37",
                            CategoryId = "3",
                            Description = "",
                            Price = 109.0,
                            Title = "BodyBio, E-Lyte"
                        },
                        new
                        {
                            Id = "38",
                            CategoryId = "3",
                            Description = "",
                            Price = 163.0,
                            Title = "فيجا ، سبورت"
                        },
                        new
                        {
                            Id = "39",
                            CategoryId = "3",
                            Description = "",
                            Price = 111.0,
                            Title = "مضاعف الترطيب"
                        },
                        new
                        {
                            Id = "40",
                            CategoryId = "3",
                            Description = "",
                            Price = 54.0,
                            Title = "NutriBiotic"
                        },
                        new
                        {
                            Id = "41",
                            CategoryId = "3",
                            Description = "",
                            Price = 169.0,
                            Title = "زيت الكريل"
                        },
                        new
                        {
                            Id = "100",
                            CategoryId = "3",
                            Description = "",
                            Price = 99.0,
                            Title = " برنامج لنحت وتفصيل الجسم في 8 أسابيع فقط "
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.SportsProgram", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BodyFocus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("TrainingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TblSportsProgram");

                    b.HasData(
                        new
                        {
                            Id = "100",
                            BodyFocus = "كل الجسم",
                            Difficulty = "3-4",
                            Equipment = "حزام التمرين,سجاد",
                            Length = 8,
                            TrainingType = ""
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Tracking", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Exercies_programId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Iscomplete")
                        .HasColumnType("bit");

                    b.Property<string>("Order_DetailsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Exercies_programId");

                    b.HasIndex("Order_DetailsId");

                    b.ToTable("TblTracking");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Exercies_programId = "1",
                            Iscomplete = true,
                            Order_DetailsId = "1"
                        });
                });

            modelBuilder.Entity("liaqati_master.Models.Trak", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServicesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ServicesId");

                    b.ToTable("Trak");
                });

            modelBuilder.Entity("liaqati_master.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cover_photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("Exp_Years")
                        .HasColumnType("int");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Wieght")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            Active = false,
                            ConcurrencyStamp = "f03ac3f5-2931-4cb0-9133-baea23bc4d56",
                            Cover_photo = "sssssssssssssssa",
                            EmailConfirmed = false,
                            Exp_Years = 10,
                            Fname = "sssssssssssssss",
                            Gender = 1,
                            Height = 120,
                            Lname = "sssssssssssssss",
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            Photo = "ssssssssssssssss",
                            SecurityStamp = "be656997-3cf9-4fde-8cc9-026b3068e6b2",
                            TwoFactorEnabled = false,
                            Wieght = 120
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("liaqati_master.Models.Achievements", b =>
                {
                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Achievements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Article", b =>
                {
                    b.HasOne("liaqati_master.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("liaqati_master.Models.ChatUser", b =>
                {
                    b.HasOne("liaqati_master.Models.Chat", "Chat")
                        .WithMany("ChatUser")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("ChatUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Comment_Servies", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithMany("commentServies")
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Comments", b =>
                {
                    b.HasOne("liaqati_master.Models.Article", "articles")
                        .WithMany("comments")
                        .HasForeignKey("articlesId");

                    b.Navigation("articles");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercies_program", b =>
                {
                    b.HasOne("liaqati_master.Models.Exercise", "Exercise")
                        .WithMany("Exercies_Programs")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.SportsProgram", "SportsProgram")
                        .WithMany("Exercies_Programs")
                        .HasForeignKey("SportsProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("SportsProgram");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite_Servies", b =>
                {
                    b.HasOne("liaqati_master.Models.Favorite", "Favorite")
                        .WithMany("Favorite_Servies")
                        .HasForeignKey("FavoriteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithMany("favorites")
                        .HasForeignKey("ServicesId1");

                    b.Navigation("Favorite");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.HealthyRecipe", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("HealthyRecipes")
                        .HasForeignKey("liaqati_master.Models.HealthyRecipe", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.MealPlans", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("MealPlans")
                        .HasForeignKey("liaqati_master.Models.MealPlans", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Message", b =>
                {
                    b.HasOne("liaqati_master.Models.Chat", "Chat")
                        .WithMany("Message")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("liaqati_master.Models.Order", b =>
                {
                    b.HasOne("liaqati_master.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("liaqati_master.Models.Order_Details", b =>
                {
                    b.HasOne("liaqati_master.Models.Order", "Order")
                        .WithMany("Order_Details")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.Service", "Service")
                        .WithMany("Order_Details")
                        .HasForeignKey("ServiceId");

                    b.Navigation("Order");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("liaqati_master.Models.Product", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("Products")
                        .HasForeignKey("liaqati_master.Models.Product", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Rate", b =>
                {
                    b.HasOne("liaqati_master.Models.Order_Details", "Order_Details")
                        .WithOne("Rate")
                        .HasForeignKey("liaqati_master.Models.Rate", "Order_DetailsId");

                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Service", b =>
                {
                    b.HasOne("liaqati_master.Models.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("liaqati_master.Models.SportsProgram", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithOne("sportsProgram")
                        .HasForeignKey("liaqati_master.Models.SportsProgram", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Tracking", b =>
                {
                    b.HasOne("liaqati_master.Models.Exercies_program", "Exercies_program")
                        .WithMany("Tracking")
                        .HasForeignKey("Exercies_programId");

                    b.HasOne("liaqati_master.Models.Order_Details", "Order_Details")
                        .WithMany("Tracking")
                        .HasForeignKey("Order_DetailsId");

                    b.Navigation("Exercies_program");

                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Trak", b =>
                {
                    b.HasOne("liaqati_master.Models.Service", "Services")
                        .WithMany("traks")
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Services");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("liaqati_master.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("liaqati_master.Models.Article", b =>
                {
                    b.Navigation("comments");
                });

            modelBuilder.Entity("liaqati_master.Models.Category", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Services");
                });

            modelBuilder.Entity("liaqati_master.Models.Chat", b =>
                {
                    b.Navigation("ChatUser");

                    b.Navigation("Message");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercies_program", b =>
                {
                    b.Navigation("Tracking");
                });

            modelBuilder.Entity("liaqati_master.Models.Exercise", b =>
                {
                    b.Navigation("Exercies_Programs");
                });

            modelBuilder.Entity("liaqati_master.Models.Favorite", b =>
                {
                    b.Navigation("Favorite_Servies");
                });

            modelBuilder.Entity("liaqati_master.Models.Order", b =>
                {
                    b.Navigation("Order_Details");
                });

            modelBuilder.Entity("liaqati_master.Models.Order_Details", b =>
                {
                    b.Navigation("Rate");

                    b.Navigation("Tracking");
                });

            modelBuilder.Entity("liaqati_master.Models.Service", b =>
                {
                    b.Navigation("HealthyRecipes");

                    b.Navigation("MealPlans");

                    b.Navigation("Order_Details");

                    b.Navigation("Products");

                    b.Navigation("commentServies");

                    b.Navigation("favorites");

                    b.Navigation("sportsProgram");

                    b.Navigation("traks");
                });

            modelBuilder.Entity("liaqati_master.Models.SportsProgram", b =>
                {
                    b.Navigation("Exercies_Programs");
                });

            modelBuilder.Entity("liaqati_master.Models.User", b =>
                {
                    b.Navigation("Achievements");

                    b.Navigation("ChatUser");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
